package view.Dashboard.Admin;

import database.ConexaoBD;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import view.ViewLogin;

public final class DashboardAdmin extends javax.swing.JFrame {

    /**
     * Creates new form AdminDashboard
     */
    public DashboardAdmin() {
        initComponents();
        /*Icon Janela*/
        // Define o ícone da janela como a imagem localizada em "/images/icon.png".
        setIconImage(new ImageIcon(getClass().getResource("/images/icon.png")).getImage());
        // Define a posição da janela como centralizada em relação à tela.
        this.setLocationRelativeTo(null);
        //Icons Image
        iconAdmin.setSvgImage("images/Dashboard/iconAdminStatic.svg", 89, 24);
        btnExcluir.setSvgImage("images/Dashboard/iconTrash.svg", 36, 39);
        btnSair.setSvgImage("images/Dashboard/btnSairAdmin.svg", 74, 39);
        iconUpdate.setSvgImage("images/Dashboard/iconUpdate.svg",38,37);
        // Solicitando a tableta
        try {
            consultarPaciente();
            consultarPsicologo();
            consultarPsiquiatra();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível buscar os dados do banco.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        iconUpdate = new images.SVGImage();
        iconAdmin = new images.SVGImage();
        btnExcluir = new images.SVGImage();
        btnSair = new images.SVGImage();
        Table1 = new javax.swing.JScrollPane();
        tablePaciente = new javax.swing.JTable();
        Table2 = new javax.swing.JScrollPane();
        tablePsicologo = new javax.swing.JTable();
        Table3 = new javax.swing.JScrollPane();
        tablePsiquiatra = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconUpdate.setText("sVGImage1");
        iconUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconUpdateMouseClicked(evt);
            }
        });
        jPanel1.add(iconUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1103, 17, 38, 37));

        iconAdmin.setText("sVGImage1");
        jPanel1.add(iconAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 24, 89, 24));

        btnExcluir.setText("sVGImage1");
        btnExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExcluirMouseClicked(evt);
            }
        });
        jPanel1.add(btnExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1154, 17, 36, 39));

        btnSair.setText("sVGImage2");
        btnSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSairMouseClicked(evt);
            }
        });
        jPanel1.add(btnSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(1213, 17, 74, 39));

        tablePaciente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tablePaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "E-mail", "CPF", "Celular", "Endereço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePaciente.setRowHeight(35);
        Table1.setViewportView(tablePaciente);
        if (tablePaciente.getColumnModel().getColumnCount() > 0) {
            tablePaciente.getColumnModel().getColumn(0).setPreferredWidth(30);
            tablePaciente.getColumnModel().getColumn(0).setMaxWidth(30);
            tablePaciente.getColumnModel().getColumn(3).setPreferredWidth(140);
            tablePaciente.getColumnModel().getColumn(3).setMaxWidth(140);
            tablePaciente.getColumnModel().getColumn(4).setPreferredWidth(140);
            tablePaciente.getColumnModel().getColumn(4).setMaxWidth(140);
        }

        jPanel1.add(Table1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 74, 1264, 206));

        tablePsicologo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tablePsicologo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Profissionalização", "Tipo de Atendimento", "Telefone", "Endereço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePsicologo.setRowHeight(35);
        Table2.setViewportView(tablePsicologo);
        if (tablePsicologo.getColumnModel().getColumnCount() > 0) {
            tablePsicologo.getColumnModel().getColumn(0).setPreferredWidth(30);
            tablePsicologo.getColumnModel().getColumn(0).setMaxWidth(30);
            tablePsicologo.getColumnModel().getColumn(2).setPreferredWidth(250);
            tablePsicologo.getColumnModel().getColumn(2).setMaxWidth(250);
            tablePsicologo.getColumnModel().getColumn(3).setPreferredWidth(120);
            tablePsicologo.getColumnModel().getColumn(3).setMaxWidth(120);
            tablePsicologo.getColumnModel().getColumn(4).setPreferredWidth(140);
            tablePsicologo.getColumnModel().getColumn(4).setMaxWidth(140);
        }

        jPanel1.add(Table2, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 296, 1264, 206));

        tablePsiquiatra.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tablePsiquiatra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Profissionalização", "Tipo de Atendimento", "Telefone", "Endereço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePsiquiatra.setRowHeight(35);
        Table3.setViewportView(tablePsiquiatra);
        if (tablePsiquiatra.getColumnModel().getColumnCount() > 0) {
            tablePsiquiatra.getColumnModel().getColumn(0).setPreferredWidth(30);
            tablePsiquiatra.getColumnModel().getColumn(0).setMaxWidth(30);
            tablePsiquiatra.getColumnModel().getColumn(2).setPreferredWidth(250);
            tablePsiquiatra.getColumnModel().getColumn(2).setMaxWidth(250);
            tablePsiquiatra.getColumnModel().getColumn(3).setPreferredWidth(120);
            tablePsiquiatra.getColumnModel().getColumn(3).setMaxWidth(120);
            tablePsiquiatra.getColumnModel().getColumn(4).setPreferredWidth(140);
            tablePsiquiatra.getColumnModel().getColumn(4).setMaxWidth(140);
        }

        jPanel1.add(Table3, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 518, 1264, 206));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1310, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 740, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1310, 740));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcluirMouseClicked
        SelectTypeDel delUser = new SelectTypeDel();
        delUser.setVisible(true);
    }//GEN-LAST:event_btnExcluirMouseClicked

    private void btnSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSairMouseClicked
        ViewLogin returnToLogin = new ViewLogin();
        returnToLogin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSairMouseClicked

    private void iconUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconUpdateMouseClicked
        try {
            consultarPaciente();
            consultarPsicologo();
            consultarPsiquiatra();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível buscar os dados do banco.");
        }
    }//GEN-LAST:event_iconUpdateMouseClicked

    // CONSTRUTOR TABELA PACIENTE
    public void consultarPaciente() throws Exception {
        DefaultTableModel model = (DefaultTableModel) tablePaciente.getModel();
        model.setRowCount(0);

        String sql = """
                    SELECT paciente.id_paciente, paciente.nome, paciente.email, paciente.cpf, telefone_paciente.celular, CONCAT(endereco_paciente.rua, ', ', endereco_paciente.bairro, ', ', endereco_paciente.estado,',',endereco_paciente.cep) AS endereco_completo
                    FROM paciente
                    INNER JOIN telefone_paciente ON paciente.cod_tel = telefone_paciente.cod_tel
                    INNER JOIN endereco_paciente ON paciente.cod_endereco = endereco_paciente.cod_endereco;
                    """;
        try (Connection conn = ConexaoBD.obtemConexao(); PreparedStatement ps = conn.prepareStatement(sql)) {
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getInt(4), rs.getString(5), rs.getString(6)});
            }
        }
    }

    // CONSTRUTOR TABELA PSIQUIATRA
    public void consultarPsiquiatra() throws Exception {
        DefaultTableModel model = (DefaultTableModel) tablePsiquiatra.getModel();
        model.setRowCount(0);

        String sql = """
                    SELECT psiquiatra.id_psiquiatra, psiquiatra.nome, psiquiatra.profissionalizacao, psiquiatra.tipo_consulta, telefone_psiquiatra.comercial, CONCAT(endereco_psiquiatra.rua, ', ', endereco_psiquiatra.bairro, ', ', endereco_psiquiatra.estado) AS endereco_completo
                    FROM psiquiatra
                    INNER JOIN telefone_psiquiatra ON psiquiatra.cod_tel = telefone_psiquiatra.cod_tel
                    INNER JOIN endereco_psiquiatra ON psiquiatra.cod_endereco = endereco_psiquiatra.cod_endereco;
                    """;
        try (Connection conn = ConexaoBD.obtemConexao(); PreparedStatement ps = conn.prepareStatement(sql)) {
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getLong(5), rs.getString(6)});
            }
        }

    }

    // CONSTRUTOR TABELA PSICOLOGO
    public void consultarPsicologo() throws Exception {
        DefaultTableModel model = (DefaultTableModel) tablePsicologo.getModel();
        model.setRowCount(0);

        String sql = """
                    SELECT psicologo.id_psicologo, psicologo.nome, psicologo.profissionalizacao, psicologo.tipo_consulta, telefone_psicologo.comercial, CONCAT(endereco_psicologo.rua, ', ', endereco_psicologo.bairro, ', ', endereco_psicologo.estado) AS endereco_completo
                    FROM psicologo
                    INNER JOIN telefone_psicologo ON psicologo.cod_tel = telefone_psicologo.cod_tel
                    INNER JOIN endereco_psicologo ON psicologo.cod_endereco = endereco_psicologo.cod_endereco;
                    """;
        try (Connection conn = ConexaoBD.obtemConexao(); PreparedStatement ps = conn.prepareStatement(sql)) {
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getLong(5), rs.getString(6)});
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Table1;
    private javax.swing.JScrollPane Table2;
    private javax.swing.JScrollPane Table3;
    private images.SVGImage btnExcluir;
    private images.SVGImage btnSair;
    private images.SVGImage iconAdmin;
    private images.SVGImage iconUpdate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTable tablePaciente;
    private javax.swing.JTable tablePsicologo;
    private javax.swing.JTable tablePsiquiatra;
    // End of variables declaration//GEN-END:variables
}
